{"version":3,"sources":["components/Devider.jsx","components/Header.jsx","redux/actions/utils.js","components/Sidebar.jsx","components/vacancies/ModalVacancy.jsx","components/vacancies/ListVacansies.jsx","redux/actions/jobs.js","components/search/InputSearch.jsx","api/index.js","components/search/ComponentExperience.jsx","components/search/ComponentCity.jsx","components/search/ModalSearch.jsx","components/Loader.jsx","components/Content.jsx","components/Footer.jsx","App.js","redux/reducers/jobs.js","redux/reducers/utils.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["Wrapper","styled","div","Line","Devider","children","style","marginRight","marginLeft","Title","h2","Header","changeExperience","createAction","changePage","changeCity","setIsOpenModalSearch","setCountItemsOnPage","setFirstLoaded","ButtonSearch","button","Information","h3","List","ul","Item","li","ItemBase","span","ItemResponse","Sidebar","snippetVacancies","useSelector","state","reducerJobs","reducerUtils","city","experience","dispatch","useDispatch","onClick","isOpenModalSearch","found","title","validateExperience","ModalVacancy","time","item","published_at","formatDistanceToNow","Date","name","dangerouslySetInnerHTML","__html","description","NavLinkWrapper","SubLinkWrapper","CompanyLink","a","SalaryText","ListVacansies","refList","useRef","refItem","useState","itemHeight","setItemHeight","fullVacancies","countItemsOnPage","handleEmptyData","data","arg","optionsModalHover","index","followCursor","shiftX","shiftY","useEffect","current","count","Math","trunc","clientHeight","ref","map","key","id","options","Trigger","type","href","target","length","slice","salary","res","salaryFrom","salaryTo","salaryCurrency","renderSalary","employer","company","renderCompany","Hover","fetchSnippetVacanciesRequest","fetchSnippetVacanciesSuccess","fetchSnippetVacanciesFailure","fetchFullVacanciesRequest","fetchFullVacanciesSuccess","fetchFullVacanciesFailure","InputForm","Input","InputSearch","textValue","setTextValue","placeholder","value","onChange","e","handleSuccess","response","handleError","error","message","getVacancies","textSearch","areaId","countVacancies","currentPage","query","axios","get","base_url","getVacancy","this","interceptors","use","ButtonExperience","Radio","Button","ComponentExperience","margin","Group","defaultValue","size","ComponentCity","isChangeCity","setIsChangeCity","handleChangeCity","ModalSearch","firstLoadedApp","fetchFullVacancies","isLoadingData","arrayIds","items","forEach","push","queries","vacancy","shift","fetchSnippetVacancies","handleSubmit","toggleSettings","visible","centered","onOk","onCancel","footer","WrapperSpin","DataIsLoaded","isLoading","Content","PaginationApp","Pagination","Footer","defaultCurrent","showSizeChanger","total","pageSize","showLessItems","App","handleActions","payload","firstLoaded","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc7c5f13.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: #000;\r\n`;\r\n\r\nexport const Devider = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Line style={{ marginRight: '24px' }} />\r\n      {children}\r\n      <Line style={{ marginLeft: '24px' }} />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Devider } from './Devider';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n`;\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Devider>\r\n        <Title>HeadHunter</Title>\r\n      </Devider>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const changeExperience = createAction('CHANGE_EXPERIENCE');\r\nexport const changePage = createAction('CHANGE_PAGE');\r\nexport const changeCity = createAction('CHANGE_CITY');\r\nexport const setIsOpenModalSearch = createAction('SET_IS_OPEN_MODAL');\r\nexport const setCountItemsOnPage = createAction('SET_COUNT_ITEMS_ON_PAGE');\r\nexport const setFirstLoaded = createAction('SET_FIRST_LOADED');\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setIsOpenModalSearch } from '../redux/actions/utils';\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 5px;\r\n  width: 250px;\r\n`;\r\nconst ButtonSearch = styled.button`\r\n  width: 100%;\r\n  height: 30px;\r\n  background-color: #1890ff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  border: none;\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #1890ffe8;\r\n  }\r\n`;\r\nconst Information = styled.div`\r\n  padding: 8px;\r\n`;\r\nconst Title = styled.h3``;\r\nconst List = styled.ul`\r\n  margin: 0;\r\n`;\r\nconst Item = styled.li`\r\n  font-weight: 500;\r\n`;\r\nconst ItemBase = styled.span``;\r\nconst ItemResponse = styled.span`\r\n  margin-left: 6px;\r\n`;\r\n\r\nexport const Sidebar = () => {\r\n  const { snippetVacancies } = useSelector((state) => state.reducerJobs);\r\n  const { city, experience } = useSelector((state) => state.reducerUtils);\r\n  const dispatch = useDispatch();\r\n\r\n  const validateExperience = (experience) => {\r\n    switch (experience) {\r\n      case 1:\r\n        return 'Не имеет значения';\r\n      case 2:\r\n        return 'Нет опыта';\r\n      case 3:\r\n        return 'От 1 года до 3 лет';\r\n      case 4:\r\n        return 'От 3 до 6 лет';\r\n      default:\r\n        return 'Не имеет значения';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonSearch\r\n        onClick={() =>\r\n          dispatch(setIsOpenModalSearch({ isOpenModalSearch: true }))\r\n        }\r\n      >\r\n        Поиск\r\n      </ButtonSearch>\r\n      <Information>\r\n        <Title>Информация поиска:</Title>\r\n        <List>\r\n          <Item>\r\n            <ItemBase>Найдено вакансий:</ItemBase>\r\n            <ItemResponse>{snippetVacancies.found}</ItemResponse>\r\n          </Item>\r\n          <Item>\r\n            <ItemBase>Город:</ItemBase>\r\n            <ItemResponse>{city.title}</ItemResponse>\r\n          </Item>\r\n          <Item>\r\n            <ItemBase>Опыт:</ItemBase>\r\n            <ItemResponse>{validateExperience(experience)}</ItemResponse>\r\n          </Item>\r\n        </List>\r\n      </Information>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 10;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  padding: 4px;\r\n  font-size: 14px;\r\n  -webkit-line-clamp: 30; /* Число отображаемых строк */\r\n  display: -webkit-box; /* Включаем флексбоксы */\r\n  -webkit-box-orient: vertical; /* Вертикальная ориентация */\r\n  overflow: hidden; /* Обрезаем всё за пределами блока */\r\n  max-height: 70%;\r\n  border: 1px solid #000;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst renderTimePublished = (time) => {\r\n  return `${formatDistanceToNow(new Date(time))} назад. `;\r\n};\r\n\r\nconst renderExperience = (experience) => {\r\n  return `Требуемый опыт работы: ${experience}.  `;\r\n};\r\n\r\nexport const ModalVacancy = ({ item }) => {\r\n  return (\r\n    <Wrapper>\r\n      <span>\r\n        Вакансия опубликована {renderTimePublished(item.published_at)}\r\n      </span>\r\n      <span>{renderExperience(item.experience.name)}</span>\r\n      <hr />\r\n      <div\r\n        dangerouslySetInnerHTML={{\r\n          __html: item.description,\r\n        }}\r\n      ></div>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ReactHover from 'react-hover';\r\nimport { setCountItemsOnPage } from '../../redux/actions/utils';\r\nimport { ModalVacancy } from './ModalVacancy';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: calc(100vw - 298px);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  /* Отстпу справа - размер sidebar */\r\n  padding-right: 250px;\r\n  margin-left: 16px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  list-style: none;\r\n  padding: 0 32px;\r\n  margin: 0 0 10px 0;\r\n`;\r\n\r\nconst NavLinkWrapper = styled.div`\r\n  display: flex;\r\n  align-items: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst SubLinkWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: space-between;\r\n  justify-content: center;\r\n  width: 260px;\r\n  @media (max-width: 1400px) {\r\n    width: 220px;\r\n  }\r\n`;\r\n\r\nconst CompanyLink = styled.a`\r\n  color: #6193e8;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  @media (max-width: 1400px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst SalaryText = styled.span`\r\n  color: #86888c;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  @media (max-width: 1400px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 100%;\r\n  height: 45px;\r\n  border-bottom: 1px solid #e0d6d6;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  transition: 0.7s;\r\n\r\n  &:hover {\r\n    background-color: #e4e6ef;\r\n  }\r\n  @media (max-width: 1400px) {\r\n    padding: 4px;\r\n    height: 40px;\r\n  }\r\n`;\r\nconst Title = styled.a`\r\n  margin: 6px 0 0 6px;\r\n  color: #000;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  transition: 0.7s;\r\n\r\n  &:hover {\r\n    color: #1890ff;\r\n  }\r\n\r\n  @media (max-width: 1400px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const ListVacansies = () => {\r\n  const refList = useRef();\r\n  const refItem = useRef();\r\n  const [itemHeight, setItemHeight] = useState(40);\r\n  const dispatch = useDispatch();\r\n\r\n  const { fullVacancies } = useSelector((state) => state.reducerJobs);\r\n  const { countItemsOnPage } = useSelector((state) => state.reducerUtils);\r\n\r\n  const handleEmptyData = (data, arg) => (data && data[arg]) || null;\r\n\r\n  const renderSalary = (salary) => {\r\n    let res = '';\r\n    const salaryFrom = handleEmptyData(salary, 'from');\r\n    const salaryTo = handleEmptyData(salary, 'to');\r\n    const salaryCurrency = handleEmptyData(salary, 'currency');\r\n    if (salaryFrom) {\r\n      res += `от ${salaryFrom} `;\r\n    }\r\n    if (salaryTo) {\r\n      res += `до ${salaryTo} `;\r\n    }\r\n    if (salaryCurrency) {\r\n      res += `${salaryCurrency}`;\r\n    }\r\n    return res === '' ? 'Не указана' : res;\r\n  };\r\n\r\n  const renderCompany = (item) => {\r\n    let company = null;\r\n    company = handleEmptyData(item, 'name');\r\n    if (company === null) {\r\n      return 'Не указана';\r\n    }\r\n    return company && company.length > 19\r\n      ? company.slice(0, 19) + '...'\r\n      : company;\r\n  };\r\n\r\n  const optionsModalHover = (index) => {\r\n    return {\r\n      followCursor: true,\r\n      shiftX: 20,\r\n      shiftY: -index * itemHeight,\r\n    };\r\n  };\r\n\r\n  const renderList = () =>\r\n    fullVacancies.map((item, index) => {\r\n      return (\r\n        <Item key={item.id} ref={refItem}>\r\n          <ReactHover options={optionsModalHover(index)}>\r\n            <ReactHover.Trigger type=\"trigger\">\r\n              <NavLinkWrapper>\r\n                <Title\r\n                  href={`https://spb.hh.ru/vacancy/${item.id}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  {item.name.length > 44\r\n                    ? item.name.slice(0, 44) + '...'\r\n                    : item.name}\r\n                </Title>\r\n                <SubLinkWrapper>\r\n                  <SalaryText>Зарплата: {renderSalary(item.salary)}</SalaryText>\r\n                  <CompanyLink\r\n                    href={handleEmptyData(item.employer, 'alternate_url')}\r\n                    target=\"_blank\"\r\n                  >\r\n                    Компания: {renderCompany(item.employer)}\r\n                  </CompanyLink>\r\n                </SubLinkWrapper>\r\n              </NavLinkWrapper>\r\n            </ReactHover.Trigger>\r\n            <ReactHover.Hover type=\"hover\">\r\n              <ModalVacancy item={item} />\r\n            </ReactHover.Hover>\r\n          </ReactHover>\r\n        </Item>\r\n      );\r\n    });\r\n\r\n  useEffect(() => {\r\n    /* Узнаем сколько поместится item на странице относительно высоты окна\r\n     */\r\n    if (refList.current && refItem.current) {\r\n      let count = Math.trunc(\r\n        refList.current.clientHeight / refItem.current.clientHeight\r\n      );\r\n      /* Максимум 21 за один запрос */\r\n      if (count > 21) {\r\n        count = 21;\r\n      }\r\n      dispatch(setCountItemsOnPage({ count }));\r\n      setItemHeight(refItem.current.clientHeight);\r\n    }\r\n  }, [countItemsOnPage, dispatch]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <List ref={refList}>{renderList()}</List>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const fetchSnippetVacanciesRequest = createAction(\r\n  'FETCH_SNIPPER_VACANCIES_REQUEST'\r\n);\r\nexport const fetchSnippetVacanciesSuccess = createAction(\r\n  'FETCH_SNIPPER_VACANCIES_SUCCESS'\r\n);\r\nexport const fetchSnippetVacanciesFailure = createAction(\r\n  'FETCH_SNIPPER_VACANCIES_FAILURE'\r\n);\r\n\r\nexport const fetchFullVacanciesRequest = createAction(\r\n  'FETCH_FULL_VACANCIES_REQUEST'\r\n);\r\nexport const fetchFullVacanciesSuccess = createAction(\r\n  'FETCH_FULL_VACANCIES_SUCCESS'\r\n);\r\nexport const fetchFullVacanciesFailure = createAction(\r\n  'FETCH_FULL_VACANCIES_FAILURE'\r\n);\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Input } from 'antd';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst InputForm = styled(Input)`\r\n  width: 100%;\r\n  background: none;\r\n  color: #000;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const InputSearch = ({ textValue, setTextValue }) => {\r\n  return (\r\n    <Wrapper>\r\n      <InputForm\r\n        placeholder=\"Профессия, должность или компания\"\r\n        value={textValue}\r\n        onChange={(e) => setTextValue(e.target.value)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nclass Queries {\r\n  constructor() {\r\n    this.base_url = 'https://api.hh.ru';\r\n    axios.interceptors.response.use(this.handleSuccess, this.handleError);\r\n  }\r\n\r\n  handleSuccess = (response) => {\r\n    return response;\r\n  };\r\n\r\n  handleError = (error) => {\r\n    if (error.message === 'Network Error' && !error.response) {\r\n      message.error('Сетевая ошибка');\r\n    }\r\n\r\n    if (error.message === 'Request failed with status code 500') {\r\n      message.error('Сервер не отвечает');\r\n    }\r\n  };\r\n\r\n  getVacancies = async ({\r\n    textSearch = '',\r\n    areaId = 1,\r\n    countVacancies,\r\n    currentPage = 1,\r\n    experience = '',\r\n  }) => {\r\n    const query = `text=${textSearch}&area=${areaId}&per_page=${countVacancies}&page=${\r\n      currentPage - 1\r\n    }${experience}`;\r\n\r\n    const res = await axios.get(`${this.base_url}/vacancies?${query}`);\r\n    return res.data;\r\n  };\r\n\r\n  getVacancy = async ({ id }) => {\r\n    const res = await axios.get(`${this.base_url}/vacancies/${id}`);\r\n    return res.data;\r\n  };\r\n}\r\n\r\nexport default new Queries();\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeExperience } from '../../redux/actions/utils';\r\nimport { Radio } from 'antd';\r\n\r\nconst ButtonExperience = styled(Radio.Button)`\r\n  width: calc(100% / 2);\r\n  text-align: center;\r\n`;\r\n\r\nexport const ComponentExperience = () => {\r\n  const dispatch = useDispatch();\r\n  const { experience } = useSelector((state) => state.reducerUtils);\r\n  const onChangeExperience = (e) => {\r\n    dispatch(changeExperience({ experience: e.target.value }));\r\n  };\r\n  return (\r\n    <>\r\n      <h2 style={{ margin: '0 16px 0 0' }}>Опыт:</h2>\r\n      <Radio.Group\r\n        onChange={onChangeExperience}\r\n        value={experience}\r\n        name=\"radiogroup\"\r\n        defaultValue={1}\r\n        size=\"middle\"\r\n      >\r\n        <ButtonExperience value={1}>Не имеет значения</ButtonExperience>\r\n        <ButtonExperience value={2}>Нет опыта</ButtonExperience>\r\n        <ButtonExperience value={3}>От 1 до 3 лет</ButtonExperience>\r\n        <ButtonExperience value={4}>От 3 до 6 лет</ButtonExperience>\r\n      </Radio.Group>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeCity } from '../../redux/actions/utils';\r\nimport { Button } from 'antd';\r\n\r\nexport const ComponentCity = () => {\r\n  const [isChangeCity, setIsChangeCity] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { city } = useSelector((state) => state.reducerUtils);\r\n\r\n  const handleChangeCity = () => setIsChangeCity(!isChangeCity);\r\n\r\n  const renderInfoCity = () => {\r\n    return (\r\n      <>\r\n        <h2 style={{ margin: 0 }}>Город поиска: {city.title} </h2>\r\n        <Button onClick={handleChangeCity}>Изменить</Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderChangeCity = () => {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              const city = { title: 'Москва', areaId: 1 };\r\n              dispatch(changeCity({ city }));\r\n              handleChangeCity();\r\n            }}\r\n            style={{ marginRight: '8px' }}\r\n          >\r\n            Москва\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              const city = { title: 'Санкт-Петербург', areaId: 2 };\r\n              dispatch(changeCity({ city }));\r\n              handleChangeCity();\r\n            }}\r\n          >\r\n            Санкт-Петербург\r\n          </Button>\r\n        </div>\r\n        <Button onClick={handleChangeCity}>Назад</Button>\r\n      </>\r\n    );\r\n  };\r\n  return <> {isChangeCity ? renderChangeCity() : renderInfoCity()}</>;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  fetchSnippetVacanciesRequest,\r\n  fetchSnippetVacanciesSuccess,\r\n  fetchSnippetVacanciesFailure,\r\n  fetchFullVacanciesRequest,\r\n  fetchFullVacanciesSuccess,\r\n  fetchFullVacanciesFailure,\r\n} from '../../redux/actions/jobs';\r\nimport {\r\n  setIsOpenModalSearch,\r\n  setFirstLoaded,\r\n} from '../../redux/actions/utils';\r\n\r\nimport { Button, Modal } from 'antd';\r\nimport { InputSearch } from './InputSearch';\r\nimport queries from '../../api/index';\r\nimport { ComponentExperience } from './ComponentExperience';\r\nimport { ComponentCity } from './ComponentCity';\r\n\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const ModalSearch = () => {\r\n  const [textValue, setTextValue] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const { snippetVacancies } = useSelector((state) => state.reducerJobs);\r\n  const {\r\n    countItemsOnPage,\r\n    currentPage,\r\n    city,\r\n    experience,\r\n    isOpenModalSearch,\r\n    firstLoadedApp,\r\n  } = useSelector((state) => state.reducerUtils);\r\n\r\n  const fetchFullVacancies = async () => {\r\n    dispatch(fetchFullVacanciesRequest({ isLoadingData: true }));\r\n    try {\r\n      let arrayIds = [];\r\n      /* Получаем все id вакансий из краткого описания вакансий (snippetVacancies) */\r\n      await snippetVacancies.items.forEach((item) => arrayIds.push(item.id));\r\n\r\n      const fullVacancies = [];\r\n      /* Отправляем запрос по каждой id чтобы получить описане полной вакансии */\r\n      await arrayIds.forEach(async (id, index) => {\r\n        const vacancy = await queries.getVacancy({ id });\r\n        await fullVacancies.push(vacancy);\r\n        await arrayIds.shift();\r\n        if (0 === arrayIds.length) {\r\n          dispatch(\r\n            fetchFullVacanciesSuccess({ fullVacancies, isLoadingData: false })\r\n          );\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dispatch(fetchFullVacanciesFailure({ isLoadingData: false }));\r\n    }\r\n  };\r\n\r\n  /* Опыт работы */\r\n\r\n  const validateExperience = (experience) => {\r\n    switch (experience) {\r\n      case 1:\r\n        return '';\r\n      case 2:\r\n        return '&experience=noExperience';\r\n      case 3:\r\n        return '&experience=between1And3';\r\n      case 4:\r\n        return '&experience=between3And6';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const fetchSnippetVacancies = async (textSearch, areaId) => {\r\n    dispatch(fetchSnippetVacanciesRequest({ isLoadingData: true }));\r\n    try {\r\n      /* Получаем краткое описание вакансий */\r\n      const snippetVacancies = await queries.getVacancies({\r\n        textSearch,\r\n        areaId,\r\n        countVacancies: countItemsOnPage,\r\n        currentPage: currentPage,\r\n        experience: validateExperience(experience),\r\n      });\r\n      dispatch(\r\n        fetchSnippetVacanciesSuccess({ snippetVacancies, isLoadingData: false })\r\n      );\r\n    } catch (err) {\r\n      dispatch(fetchSnippetVacanciesFailure({ isLoadingData: false }));\r\n    }\r\n  };\r\n\r\n  /* Когда получаем краткое описане вакансии, сразу делаем запрос за полным описанием */\r\n  useEffect(() => {\r\n    snippetVacancies.length !== 0 && fetchFullVacancies();\r\n  }, [snippetVacancies]);\r\n\r\n  /* Если переходим на другую страницу */\r\n  useEffect(() => {\r\n    if (firstLoadedApp) {\r\n      fetchSnippetVacancies(textValue, city.areaId);\r\n    }\r\n  }, [currentPage]);\r\n\r\n  const handleSubmit = async () => {\r\n    dispatch(setFirstLoaded({ firstLoadedApp: true }));\r\n    await fetchSnippetVacancies(textValue, city.areaId);\r\n    await toggleSettings();\r\n  };\r\n\r\n  const toggleSettings = () => {\r\n    dispatch(setIsOpenModalSearch({ isOpenModalSearch: false }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Настройки поиска\"\r\n        visible={isOpenModalSearch}\r\n        centered={true}\r\n        onOk={toggleSettings}\r\n        onCancel={toggleSettings}\r\n        footer={[\r\n          <Button key=\"back\" onClick={toggleSettings}>\r\n            Назад\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={handleSubmit}>\r\n            Поиск\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Item>\r\n          <InputSearch textValue={textValue} setTextValue={setTextValue} />\r\n        </Item>\r\n        <Item>\r\n          <ComponentCity />\r\n        </Item>\r\n        <Item>\r\n          <ComponentExperience />\r\n        </Item>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nconst WrapperSpin = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n`;\r\n\r\nexport const DataIsLoaded = ({ children, isLoading }) => {\r\n  if (isLoading)\r\n    return (\r\n      <WrapperSpin>\r\n        <Spin size=\"large\" />\r\n      </WrapperSpin>\r\n    );\r\n  return children;\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Sidebar } from './Sidebar';\r\nimport { ListVacansies } from './vacancies/ListVacansies';\r\nimport { ModalSearch } from './search/ModalSearch';\r\nimport { DataIsLoaded } from './Loader';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 100px);\r\n  display: flex;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const Content = () => {\r\n  const { isLoadingData } = useSelector((state) => state.reducerJobs);\r\n  return (\r\n    <Wrapper>\r\n      <Sidebar />\r\n      <DataIsLoaded isLoading={isLoadingData}>\r\n        <ListVacansies />\r\n      </DataIsLoaded>\r\n      <ModalSearch />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { changePage } from '../redux/actions/utils';\r\nimport { Pagination } from 'antd';\r\nimport { Devider } from './Devider';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n`;\r\n\r\nconst PaginationApp = styled(Pagination)`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Footer = () => {\r\n  const dispatch = useDispatch();\r\n  const { snippetVacancies } = useSelector((state) => state.reducerJobs);\r\n  const { countItemsOnPage, currentPage } = useSelector(\r\n    (state) => state.reducerUtils\r\n  );\r\n\r\n  const onChange = (currentPage) => {\r\n    dispatch(changePage({ currentPage }));\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Devider>\r\n        {snippetVacancies.length !== 0 ? (\r\n          <PaginationApp\r\n            defaultCurrent={1}\r\n            current={currentPage}\r\n            showSizeChanger={false}\r\n            total={snippetVacancies.found}\r\n            pageSize={countItemsOnPage}\r\n            onChange={onChange}\r\n            showLessItems={true}\r\n          />\r\n        ) : (\r\n          <Title>HeadHunter</Title>\r\n        )}\r\n      </Devider>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Header } from './components/Header';\nimport { Content } from './components/Content';\nimport { Footer } from './components/Footer';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 0 16px;\n  overflow: hidden;\n`;\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <Header />\n      <Content />\n      <Footer />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  fetchSnippetVacanciesRequest,\r\n  fetchSnippetVacanciesSuccess,\r\n  fetchSnippetVacanciesFailure,\r\n  fetchFullVacanciesRequest,\r\n  fetchFullVacanciesSuccess,\r\n  fetchFullVacanciesFailure,\r\n} from '../actions/jobs';\r\n\r\nconst initState = {\r\n  fullVacancies: [\r\n    {\r\n      id: 0,\r\n      name: 'Вакансий не найдено',\r\n      published_at: '2020-07-09T09:19:54+0300',\r\n      experience: { name: '1' },\r\n    },\r\n  ],\r\n  snippetVacancies: [],\r\n  isLoadingData: false,\r\n};\r\n\r\nexport const reducerJobs = handleActions(\r\n  {\r\n    /* SNIPPETS VACANCIES */\r\n\r\n    [fetchSnippetVacanciesRequest]: (state, { payload: { isLoadingData } }) => {\r\n      return { ...state, isLoadingData };\r\n    },\r\n    [fetchSnippetVacanciesSuccess]: (\r\n      state,\r\n      { payload: { snippetVacancies, isLoadingData } }\r\n    ) => {\r\n      return { ...state, snippetVacancies, isLoadingData };\r\n    },\r\n    [fetchSnippetVacanciesFailure]: (state, { payload: { isLoadingData } }) => {\r\n      return { ...state, isLoadingData };\r\n    },\r\n\r\n    /* FULL VACANCIES */\r\n\r\n    [fetchFullVacanciesRequest]: (state, { payload: { isLoadingData } }) => {\r\n      return { ...state, isLoadingData };\r\n    },\r\n    [fetchFullVacanciesSuccess]: (\r\n      state,\r\n      { payload: { fullVacancies, isLoadingData } }\r\n    ) => {\r\n      return { ...state, fullVacancies, isLoadingData };\r\n    },\r\n    [fetchFullVacanciesFailure]: (state, { payload: { isLoadingData } }) => {\r\n      return { ...state, isLoadingData };\r\n    },\r\n  },\r\n  initState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  changeExperience,\r\n  changePage,\r\n  changeCity,\r\n  setIsOpenModalSearch,\r\n  setCountItemsOnPage,\r\n  setFirstLoaded,\r\n} from '../actions/utils';\r\n\r\nconst initState = {\r\n  experience: 1,\r\n  currentPage: 1,\r\n  countItemsOnPage: 10,\r\n  city: { title: 'Москва', areaId: 1 },\r\n  isOpenModalSearch: true,\r\n  firstLoaded: false,\r\n};\r\n\r\nexport const reducerUtils = handleActions(\r\n  {\r\n    [changePage]: (state, { payload: { currentPage } }) => {\r\n      return { ...state, currentPage };\r\n    },\r\n    [setCountItemsOnPage]: (state, { payload: { count } }) => {\r\n      return { ...state, countItemsOnPage: count };\r\n    },\r\n    [changeCity]: (state, { payload: { city } }) => {\r\n      return { ...state, city };\r\n    },\r\n\r\n    [changeExperience]: (state, { payload: { experience } }) => {\r\n      return { ...state, experience };\r\n    },\r\n    [setIsOpenModalSearch]: (state, { payload: { isOpenModalSearch } }) => {\r\n      return { ...state, isOpenModalSearch };\r\n    },\r\n    [setFirstLoaded]: (state, { payload: { firstLoadedApp } }) => {\r\n      return { ...state, firstLoadedApp };\r\n    },\r\n  },\r\n  initState\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport { reducerJobs } from './reducers/jobs';\r\nimport { reducerUtils } from './reducers/utils';\r\n\r\nexport const rootReducer = combineReducers({\r\n  reducerJobs,\r\n  reducerUtils,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}